import os

import torch
import torch.nn as nn
from torch.autograd import Variable
from functools import reduce
import torch.nn.functional as F

#  https://github.com/facebookresearch/ResNeXt
#  https://github.com/clcarwin/convert_torch_to_pytorch

#    mean = { 0.485, 0.456, 0.406 },
#     std = { 0.229, 0.224, 0.225 },

class LambdaBase(nn.Sequential):
    def __init__(self, fn, *args):
        super(LambdaBase, self).__init__(*args)
        self.lambda_func = fn

    def forward_prepare(self, input):
        output = []
        for module in self._modules.values():
            output.append(module(input))
        return output if output else input

class Lambda(LambdaBase):
    def forward(self, input):
        return self.lambda_func(self.forward_prepare(input))

class LambdaMap(LambdaBase):
    def forward(self, input):
        return list(map(self.lambda_func,self.forward_prepare(input)))

class LambdaReduce(LambdaBase):
    def forward(self, input):
        return reduce(self.lambda_func,self.forward_prepare(input))


class Resnext101(nn.Module):
    def load_pretrain_pytorch_file(self,pytorch_file, skip=[]):
        pytorch_state_dict = torch.load(pytorch_file)
        state_dict = self.state_dict()

        keys = list(state_dict.keys())
        for key in keys:

            #debug only
            # if key=='fc.weight':
            #     state_dict['fc.weight'] = pytorch_state_dict[ '10.1.weight']
            #     continue
            # if key=='fc.bias':
            #     state_dict['fc.bias'] = pytorch_state_dict[ '10.1.bias']
            #     continue

            if key in skip: continue
            #state_dict[key] = pytorch_state_dict[ key.replace('resnext_101_32x4d.','')]
            state_dict[key] = pytorch_state_dict[ key ]

        self.load_state_dict(state_dict)
        pass

    #-----------------------------------------------------------------------
    def __init__(self, in_shape=(3,128,128), num_classes=5000 ):

        super(Resnext101, self).__init__()
        in_channels, height, width = in_shape
        self.num_classes=num_classes

        self.resnext_101_32x4d = nn.Sequential( # Sequential,
            nn.Conv2d(in_channels,64,(7, 7),(2, 2),(3, 3),1,1,bias=False),
            nn.BatchNorm2d(64),
            nn.ReLU(),
            nn.MaxPool2d((3, 3),(2, 2),(1, 1)),
            nn.Sequential( # Sequential,
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(64,128,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(128),
                                nn.ReLU(),
                                nn.Conv2d(128,128,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(128),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(128,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(256),
                        ),
                        nn.Sequential( # Sequential,
                            nn.Conv2d(64,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(256),
                        ),
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(256,128,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(128),
                                nn.ReLU(),
                                nn.Conv2d(128,128,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(128),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(128,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(256),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(256,128,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(128),
                                nn.ReLU(),
                                nn.Conv2d(128,128,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(128),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(128,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(256),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
            ),
            nn.Sequential( # Sequential,
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(256,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                                nn.Conv2d(256,256,(3, 3),(2, 2),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(256,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(512),
                        ),
                        nn.Sequential( # Sequential,
                            nn.Conv2d(256,512,(1, 1),(2, 2),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(512),
                        ),
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(512,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                                nn.Conv2d(256,256,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(256,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(512),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(512,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                                nn.Conv2d(256,256,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(256,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(512),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(512,256,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                                nn.Conv2d(256,256,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(256),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(256,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(512),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
            ),
            nn.Sequential( # Sequential,
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(512,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(2, 2),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        nn.Sequential( # Sequential,
                            nn.Conv2d(512,1024,(1, 1),(2, 2),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,512,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                                nn.Conv2d(512,512,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(512),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(512,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(1024),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
            ),
            nn.Sequential( # Sequential,
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(1024,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(1024),
                                nn.ReLU(),
                                nn.Conv2d(1024,1024,(3, 3),(2, 2),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(1024),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(1024,2048,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(2048),
                        ),
                        nn.Sequential( # Sequential,
                            nn.Conv2d(1024,2048,(1, 1),(2, 2),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(2048),
                        ),
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(2048,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(1024),
                                nn.ReLU(),
                                nn.Conv2d(1024,1024,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(1024),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(1024,2048,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(2048),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
                nn.Sequential( # Sequential,
                    LambdaMap(lambda x: x, # ConcatTable,
                        nn.Sequential( # Sequential,
                            nn.Sequential( # Sequential,
                                nn.Conv2d(2048,1024,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                                nn.BatchNorm2d(1024),
                                nn.ReLU(),
                                nn.Conv2d(1024,1024,(3, 3),(1, 1),(1, 1),1,32,bias=False),
                                nn.BatchNorm2d(1024),
                                nn.ReLU(),
                            ),
                            nn.Conv2d(1024,2048,(1, 1),(1, 1),(0, 0),1,1,bias=False),
                            nn.BatchNorm2d(2048),
                        ),
                        Lambda(lambda x: x), # Identity,
                    ),
                    LambdaReduce(lambda x,y: x+y), # CAddTable,
                    nn.ReLU(),
                ),
            ),
            # nn.AdaptiveAvgPool2d(output_size=1),
            # Lambda(lambda x: x.view(x.size(0),-1)), # View,
            # nn.Sequential(
            #     Lambda(lambda x: x.view(1,-1) if 1==len(x.size()) else x ),
            #     nn.Linear(2048,1000)
            # ), # Linear,
        )
        self.fc  = nn.Linear(2048, num_classes)


    def forward(self, x):
        x = self.resnext_101_32x4d(x)
        x = F.adaptive_avg_pool2d(x, output_size=1)
        x = x.view(x.size(0), -1)
        x = self.fc (x)
        return x #logits

#####################################################################################################3

def run_check_net():

    # https://discuss.pytorch.org/t/print-autograd-graph/692/8
    batch_size  = 1
    num_classes = 5270
    C,H,W = 3,128,128

    #inputs = torch.randn(batch_size,C,H,W)
    inputs = torch.ones(batch_size,C,H,W)
    labels = torch.randn(batch_size,num_classes)
    in_shape = inputs.size()[1:]

    net = Resnext101(in_shape=in_shape, num_classes=num_classes)
    net.load_pretrain_pytorch_file(
            #'/root/share/data/models/reference/imagenet/resnext/resnext_101_32x4d.convert.pth',
            #skip=['fc.weight'	,'fc.bias']
            '/root/share/project/kaggle/cdiscount/results/resnext101-180-00c/checkpoint1/00078000_model.pth',
            skip=[]#['fc.weight'	,'fc.bias']
        )
    net.cuda()
    net.train()

    x = Variable(inputs).cuda()
    y = Variable(labels).cuda()
    logits = net.forward(x)
    probs  = F.softmax(logits)

    loss = F.binary_cross_entropy_with_logits(logits, y)
    loss.backward()

    print(type(net))
    print(net)

    print('probs')
    print(probs)

    #merging
    # net.eval()
    # net.merge_bn()


########################################################################################
if __name__ == '__main__':
    print( '%s: calling main function ... ' % os.path.basename(__file__))

    run_check_net()












